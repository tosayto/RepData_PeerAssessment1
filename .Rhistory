1+1
2+2
1+1
1:10
z
z<-1:10
z
sum(z)
mean(z)
z*2
z^2
z[1]
z[2:4]
x<-data.frame(z)
x
x["z"]
x[2:5,]
x[2:5,1]
class(z)
2*x
x[3,1]
mean(x)
mean(x[5:7])
mean(x[1:1])
sum(z)
z^3
y<- matrix(1:9 nrow=3)
y<- matrix(1:9 nrow = 3)
y<- matrix( 1:9, nrow = 3 )
m<- matrix(2:10, nrow = 3 )
dim(y)
y
m
y + m
y - m
y %*% m
letters
LETTERS
colnames(y) <- LETTERS[1]:LETTERS[3]
colnames(y) <- c(LETTERS[1],LETTERS[2], LETTERS[3])
y
colnames(y)<-NULL
y
y
colnames(y)<- LETTERS
class(LETTERS)
data()
data()
install.packages("gplot2")
install.packages("ggplot2")
install.packages("psych")
ratings <- read.table("STATS1.EX.01.TXT", header = T)
sample(1:10, 100, replace=TRUE)
sample(1:10, 100, replace=F)
sample(1:10, 5, replace=F)
install.packages("ISLR")
ls()
library(Auto)
library(ISLR)
Auto=read.table("Auto.data", header=T)
Auto=read.table("Auto", header=T)
data()
Auto<-readtable("Auto", header=TRUE)
Auto<-read.table("Auto", header=TRUE)
?data()
Auto<-read.table("Auto", header=TRUE, packageName("ISLR"))
q()
install.packages("RcppEigen")
install.packages("HSAUR2")
library(ggplot2)
gplot(1:10, 1:10)
ggplot(1:10, 1:10)
ggplot(x=1:10, y=1:10)
plot(x=1:10, y=1:10)
install.packages("maps")
diamonds
install.packages("mgcv")
install.packages("KernSmooth")
library(KernSmooth)
df<-read.csv(bzfile("repdata_data_StormData.csv.bz2"), stringsAsFactors = FALSE)
setwd("C:/Users/zacco/Downloads/MACHINEPATH/Reproducible research V/PeerAssesment2")
df<-read.csv(bzfile("repdata_data_StormData.csv.bz2"), stringsAsFactors = FALSE)
mean(is.na(df$LATITUDE))
sum(is.na(df$LATITUDE))
sum(is.na(df$LONGITUDE))
library(maps)
?us
?US
?world
map("usa")
points(df$LATITUDE,df$LONGITUDE)
point(df$LATITUDE,df$LONGITUDE)
points(df$LATITUDE,df$LONGITUDE)
df$LATITUDE[1]
df$LONGITUDE[1]
points(3040,8812)
map("world")
points(3040,8812)
?points
map("world")
points(3040,8812, col="red")
points(3040,8812, col="red")
df$LONGITUDE_E[1]
df$LATITUDE_E[1]
map("world")
points(df$LONGITUDE, df$LATITUDE, pch=16, col="red", cex=2)
map("world")
map("usa")
points(df$LONGITUDE, df$LATITUDE, pch=16, col="red", cex=2)
map("world")
points(df$LONGITUDE, df$LATITUDE, pch=16, col="red", cex=2)
points(df$LATITUDE, df$LONGITUDE, pch=16, col="red", cex=2)
map("world")
points(df$LATITUDE, df$LONGITUDE, pch=16, col="red", cex=2)
lat<-table(df$LATITUDE)
str(lat)
summary(df$LATITUDE)
df$LATITUDE[2]
df$LATITUDE[3]
df$LATITUDE[4]
dat<-read.csv(file = "activity.csv", sep = "," , header = TRUE, stringsAsFactors = FALSE)
setwd("C:/Users/zacco/Downloads/MACHINEPATH/Reproducible research V/RepData_PeerAssessment1")
dat<-read.csv(file = "activity.csv", sep = "," , header = TRUE, stringsAsFactors = FALSE)
dailySteps <- aggregate(steps~date,sum,data=dat)
View(dailySteps)
View(dailySteps)
geom_line(aes(x=newInterval,y=AverageStepsperInterval))+
library(stats)
library(dplyr)
library(scales)     # for ggplot x axis hh:mm formating
library(ggplot2)
library(data.table)
total<-dat%>%
group_by(date)%>%
summarize(sumTotalNumberOfSteps = sum(steps, na.rm = TRUE))
hist(total$sumTotalNumberOfSteps, xlab="steps each day", main = "Histogram")
meanTotalNumberOfStepsPerDay<-mean(total$sumTotalNumberOfSteps)
medianTotalNumberOfStepsPerDay<-median(total$sumTotalNumberOfSteps)
dat$newInterval <- as.POSIXct(strptime(sprintf("%04d",dat$interval), "%H%M"))
#newIntervalVector<-sapply(dat$interval, newInterval)
#dat$newInterval<-newIntervalVector
newDate <- as.POSIXct(paste(dat$date,dat$newInterval))
dat$newDate<-newDate
head(dat)
str(dat)
dt<-data.table(dat)
dt<-dt[, AverageStepsperInterval:=mean(steps, na.rm = TRUE),by=newInterval]
library(ggplot2)
ggplot(dt)+
geom_line(aes(x=newInterval,y=AverageStepsperInterval))+
scale_x_datetime(labels=date_format("%H:%M",tz=Sys.timezone())) +
ylab("Steps")+
xlab("Interval")+
ggtitle("Average 5-minute interval steps")
whichInterval<-dt%>%
arrange(desc(AverageStepsperInterval), desc(steps))
whichInterval[1,]
TotalRowsWithMissingValues<-sum(is.na(dt$steps))
TotalRowsWithMissingValues
dt2<-dt
dt2[,whichWasNA:=is.na(steps)]
dt2[,newSteps:=ifelse(whichWasNA,AverageStepsperInterval,steps)]
TotalRowsWithMissingValuesAfterNewStrategy<-sum(is.na(dt$newSteps))
TotalRowsWithMissingValuesAfterNewStrategy
totalStepsPerDay<-dt2%>%
group_by(date)%>%
summarize(sumTotalNumberOfStepsPerDay = sum(newSteps, na.rm = TRUE))
hist(totalStepsPerDay$sumTotalNumberOfStepsPerDay, main = "Histogram", xlab = "Total Steps")
View(totalStepsPerDay)
meanTotalNumberOfStepsPerDay2<-mean(totalStepsPerDay$sumTotalNumberOfStepsPerDay)
medianTotalNumberOfStepsPerDay2<-median(totalStepsPerDay$sumTotalNumberOfStepsPerDay)
